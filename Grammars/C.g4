grammar C;

// Rules
// =====================================================================================================================
statements
    :statement* EOF;

statement
    : declaration SEMICOLON
    ;

declaration // specifier(optional)/base type/declarator/initializer(optional) (ref. C++ the programming language, p79)
    : base_type ID (COMMA ID)*
    ;

base_type
    : CHAR
    | FLOAT
    | INT
    ;
// =====================================================================================================================
// =====================================================================================================================
/** Tokens */
// =====================================================================================================================

/** Operators */
// ======================================================================================================================

// Binary operators
EQ: '=';

// Special Operators
SEMICOLON: ';';
COMMA: ',';
//======================================================================================================================

// types
// =====================================================================================================================

CHAR: 'char';
FLOAT: 'float';
INT: 'int';
// =====================================================================================================================

// identifier(s) & literals
// =====================================================================================================================

ID: [_a-zA-Z] [_a-zA-Z0-9]*;
WS: [ \n\t\r]+ -> skip;
